// Generated by Haxe 4.3.2
#ifndef INCLUDED_TabController
#define INCLUDED_TabController

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Main)
HX_DECLARE_CLASS0(TabController)
HX_DECLARE_CLASS0(TabModel)
HX_DECLARE_CLASS0(TabView)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)



class HXCPP_CLASS_ATTRIBUTES TabController_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TabController_obj OBJ_;
		TabController_obj();

	public:
		enum { _hx_ClassId = 0x65fda8c5 };

		void __construct( ::TabModel model, ::TabView view, ::Main main);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="TabController")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"TabController"); }
		static ::hx::ObjectPtr< TabController_obj > __new( ::TabModel model, ::TabView view, ::Main main);
		static ::hx::ObjectPtr< TabController_obj > __alloc(::hx::Ctx *_hx_ctx, ::TabModel model, ::TabView view, ::Main main);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TabController_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TabController",31,63,46,1d); }

		 ::TabModel model;
		 ::TabView view;
		 ::Main main;
		void tabClicked();
		::Dynamic tabClicked_dyn();

};


#endif /* INCLUDED_TabController */ 
