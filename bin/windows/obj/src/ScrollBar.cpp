// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_ScrollBar
#include <ScrollBar.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_01a7a900182b2f0f_12_new,"ScrollBar","new",0x3076a398,"ScrollBar.new","ScrollBar.hx",12,0x7429d6d8)
HX_LOCAL_STACK_FRAME(_hx_pos_01a7a900182b2f0f_18_initialize,"ScrollBar","initialize",0xfbf1b518,"ScrollBar.initialize","ScrollBar.hx",18,0x7429d6d8)
HX_LOCAL_STACK_FRAME(_hx_pos_01a7a900182b2f0f_30_onMouseDown,"ScrollBar","onMouseDown",0x51825f40,"ScrollBar.onMouseDown","ScrollBar.hx",30,0x7429d6d8)
HX_LOCAL_STACK_FRAME(_hx_pos_01a7a900182b2f0f_35_onMouseMove,"ScrollBar","onMouseMove",0x577549ef,"ScrollBar.onMouseMove","ScrollBar.hx",35,0x7429d6d8)
HX_LOCAL_STACK_FRAME(_hx_pos_01a7a900182b2f0f_44_onMouseUp,"ScrollBar","onMouseUp",0xd752b9b9,"ScrollBar.onMouseUp","ScrollBar.hx",44,0x7429d6d8)

void ScrollBar_obj::__construct( ::openfl::text::TextField textField){
            	HX_STACKFRAME(&_hx_pos_01a7a900182b2f0f_12_new)
HXLINE(  13)		super::__construct();
HXLINE(  14)		this->textField = textField;
HXLINE(  15)		this->initialize();
            	}

Dynamic ScrollBar_obj::__CreateEmpty() { return new ScrollBar_obj; }

void *ScrollBar_obj::_hx_vtable = 0;

Dynamic ScrollBar_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ScrollBar_obj > _hx_result = new ScrollBar_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ScrollBar_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x51d97f02) {
			return inClassId==(int)0x4af7dd8e || inClassId==(int)0x51d97f02;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void ScrollBar_obj::initialize(){
            	HX_GC_STACKFRAME(&_hx_pos_01a7a900182b2f0f_18_initialize)
HXLINE(  19)		this->bar =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE(  20)		this->bar->get_graphics()->beginFill(15264751,null());
HXLINE(  21)		this->bar->get_graphics()->drawRect(( (Float)(0) ),( (Float)(0) ),( (Float)(20) ),( (Float)(100) ));
HXLINE(  22)		this->bar->get_graphics()->endFill();
HXLINE(  23)		this->bar->set_x(( (Float)(600) ));
HXLINE(  24)		this->bar->set_y(( (Float)(30) ));
HXLINE(  25)		this->addChild(this->bar);
HXLINE(  27)		this->bar->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->onMouseDown_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollBar_obj,initialize,(void))

void ScrollBar_obj::onMouseDown( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_01a7a900182b2f0f_30_onMouseDown)
HXLINE(  31)		this->stage->addEventListener(HX_("mouseMove",d6,9b,b5,f4),this->onMouseMove_dyn(),null(),null(),null());
HXLINE(  32)		this->stage->addEventListener(HX_("mouseUp",e0,f3,72,c0),this->onMouseUp_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollBar_obj,onMouseDown,(void))

void ScrollBar_obj::onMouseMove( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_01a7a900182b2f0f_35_onMouseMove)
HXLINE(  36)		Float newY = (this->get_mouseY() - ( (Float)(30) ));
HXLINE(  37)		if ((newY < 0)) {
HXLINE(  37)			newY = ( (Float)(0) );
            		}
HXLINE(  38)		Float _hx_tmp = this->textField->get_height();
HXDLIN(  38)		if ((newY > (_hx_tmp - this->bar->get_height()))) {
HXLINE(  38)			Float newY1 = this->textField->get_height();
HXDLIN(  38)			newY = (newY1 - this->bar->get_height());
            		}
HXLINE(  40)		this->bar->set_y((30 + newY));
HXLINE(  41)		 ::openfl::text::TextField _hx_tmp1 = this->textField;
HXDLIN(  41)		Float _hx_tmp2 = this->textField->get_height();
HXDLIN(  41)		Float _hx_tmp3 = (newY / (_hx_tmp2 - this->bar->get_height()));
HXDLIN(  41)		_hx_tmp1->set_scrollV(::Math_obj::ceil((_hx_tmp3 * ( (Float)(this->textField->get_maxScrollV()) ))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollBar_obj,onMouseMove,(void))

void ScrollBar_obj::onMouseUp( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_01a7a900182b2f0f_44_onMouseUp)
HXLINE(  45)		this->stage->removeEventListener(HX_("mouseMove",d6,9b,b5,f4),this->onMouseMove_dyn(),null());
HXLINE(  46)		this->stage->removeEventListener(HX_("mouseUp",e0,f3,72,c0),this->onMouseUp_dyn(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollBar_obj,onMouseUp,(void))


::hx::ObjectPtr< ScrollBar_obj > ScrollBar_obj::__new( ::openfl::text::TextField textField) {
	::hx::ObjectPtr< ScrollBar_obj > __this = new ScrollBar_obj();
	__this->__construct(textField);
	return __this;
}

::hx::ObjectPtr< ScrollBar_obj > ScrollBar_obj::__alloc(::hx::Ctx *_hx_ctx, ::openfl::text::TextField textField) {
	ScrollBar_obj *__this = (ScrollBar_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ScrollBar_obj), true, "ScrollBar"));
	*(void **)__this = ScrollBar_obj::_hx_vtable;
	__this->__construct(textField);
	return __this;
}

ScrollBar_obj::ScrollBar_obj()
{
}

void ScrollBar_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ScrollBar);
	HX_MARK_MEMBER_NAME(textField,"textField");
	HX_MARK_MEMBER_NAME(bar,"bar");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ScrollBar_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(textField,"textField");
	HX_VISIT_MEMBER_NAME(bar,"bar");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ScrollBar_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bar") ) { return ::hx::Val( bar ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"textField") ) { return ::hx::Val( textField ); }
		if (HX_FIELD_EQ(inName,"onMouseUp") ) { return ::hx::Val( onMouseUp_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"initialize") ) { return ::hx::Val( initialize_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { return ::hx::Val( onMouseDown_dyn() ); }
		if (HX_FIELD_EQ(inName,"onMouseMove") ) { return ::hx::Val( onMouseMove_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ScrollBar_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bar") ) { bar=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"textField") ) { textField=inValue.Cast<  ::openfl::text::TextField >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ScrollBar_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("textField",cd,24,81,99));
	outFields->push(HX_("bar",d3,b1,4a,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ScrollBar_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::text::TextField */ ,(int)offsetof(ScrollBar_obj,textField),HX_("textField",cd,24,81,99)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(ScrollBar_obj,bar),HX_("bar",d3,b1,4a,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ScrollBar_obj_sStaticStorageInfo = 0;
#endif

static ::String ScrollBar_obj_sMemberFields[] = {
	HX_("textField",cd,24,81,99),
	HX_("bar",d3,b1,4a,00),
	HX_("initialize",50,31,bb,ec),
	HX_("onMouseDown",08,94,05,11),
	HX_("onMouseMove",b7,7e,f8,16),
	HX_("onMouseUp",81,ac,1d,98),
	::String(null()) };

::hx::Class ScrollBar_obj::__mClass;

void ScrollBar_obj::__register()
{
	ScrollBar_obj _hx_dummy;
	ScrollBar_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ScrollBar",a6,37,cf,df);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ScrollBar_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ScrollBar_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ScrollBar_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ScrollBar_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

